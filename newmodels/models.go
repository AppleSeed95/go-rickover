// Code generated by sqlc. DO NOT EDIT.

package newmodels

import (
	"encoding/json"
	"fmt"
	"time"

	"github.com/kevinburke/go-types"
)

type ArchivedJobStatus string

const (
	ArchivedJobStatusSucceeded ArchivedJobStatus = "succeeded"
	ArchivedJobStatusFailed    ArchivedJobStatus = "failed"
	ArchivedJobStatusExpired   ArchivedJobStatus = "expired"
)

func (e *ArchivedJobStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ArchivedJobStatus(s)
	case string:
		*e = ArchivedJobStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for ArchivedJobStatus: %T", src)
	}
	return nil
}

type DeliveryStrategy string

const (
	DeliveryStrategyAtMostOnce  DeliveryStrategy = "at_most_once"
	DeliveryStrategyAtLeastOnce DeliveryStrategy = "at_least_once"
)

func (e *DeliveryStrategy) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = DeliveryStrategy(s)
	case string:
		*e = DeliveryStrategy(s)
	default:
		return fmt.Errorf("unsupported scan type for DeliveryStrategy: %T", src)
	}
	return nil
}

type JobStatus string

const (
	JobStatusQueued     JobStatus = "queued"
	JobStatusInProgress JobStatus = "in-progress"
)

func (e *JobStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = JobStatus(s)
	case string:
		*e = JobStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for JobStatus: %T", src)
	}
	return nil
}

type ArchivedJob struct {
	ID        types.PrefixUUID  `json:"id"`
	Name      string            `json:"name"`
	Attempts  int16             `json:"attempts"`
	Status    ArchivedJobStatus `json:"status"`
	CreatedAt time.Time         `json:"created_at"`
	Data      json.RawMessage   `json:"data"`
	ExpiresAt types.NullTime    `json:"expires_at"`
	AutoID    int64             `json:"auto_id"`
}

type Job struct {
	Name             string           `json:"name"`
	DeliveryStrategy DeliveryStrategy `json:"delivery_strategy"`
	Attempts         int16            `json:"attempts"`
	Concurrency      int16            `json:"concurrency"`
	CreatedAt        time.Time        `json:"created_at"`
	AutoID           int64            `json:"auto_id"`
}

type QueuedJob struct {
	ID        types.PrefixUUID `json:"id"`
	Name      string           `json:"name"`
	Attempts  int16            `json:"attempts"`
	RunAfter  time.Time        `json:"run_after"`
	ExpiresAt types.NullTime   `json:"expires_at"`
	CreatedAt time.Time        `json:"created_at"`
	UpdatedAt time.Time        `json:"updated_at"`
	Status    JobStatus        `json:"status"`
	Data      json.RawMessage  `json:"data"`
	AutoID    int64            `json:"auto_id"`
}
